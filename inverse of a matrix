#include<stdio.h>
#include<conio.h>

void printMatrix(float matrix[10][10], int row, int col) {
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++)
            printf("%0.2f ", matrix[i][j]);
        printf("\n");
    }
}

void inverseMatrix(float matrix[10][10], float inverse[10][10], int n) {
    int i, j, k;
    float ratio;
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (i == j)
                inverse[i][j] = 1;
            else
                inverse[i][j] = 0;
        }
    }
    for (i = 0; i < n; i++) {
        if (matrix[i][i] == 0) {
            printf("Matrix is singular. Inverse doesn't exist.\n");
            return;
        }
        for (j = 0; j < n; j++) {
            if (i != j) {
                ratio = matrix[j][i] / matrix[i][i];
                for (k = 0; k < n; k++) {
                    matrix[j][k] -= ratio * matrix[i][k];
                    inverse[j][k] -= ratio * inverse[i][k];
                }
            }
        }
    }
    for (i = 0; i < n; i++) {
        ratio = matrix[i][i];
        for (j = 0; j < n; j++) {
            matrix[i][j] /= ratio;
            inverse[i][j] /= ratio;
        }
    }
    printf("Inverse of the matrix:\n");
    printMatrix(inverse, n, n);
}

int main() {
    float matrix[10][10], inverse[10][10];
    int n;
    printf("Enter the order of the matrix: ");
    scanf("%d", &n);
    printf("Enter the matrix elements:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%f", &matrix[i][j]);
    inverseMatrix(matrix, inverse, n);
    return 0;
}
